#include "platform.h"
#include "xbasic_types.h"
#include "xparameters.h" // Contains definitions for peripheral RTL_MULTIPLIER
#include <unistd.h>

// we will use the Base Address of the RTL_MULTIPLIER
Xuint32 *baseaddr_p = (Xuint32 *) XPAR_MAYBETHISWILLWORK_0_S00_AXI_BASEADDR;

int microseconds = 1;

int main() {
    init_platform();

    usleep(5000000);

	do {
		*(baseaddr_p + 0) = 0b0010100001001001;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010110001001001;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0011000001001001;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010100001011001;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010100001101001;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010110001101001;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010100001111001;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010100010001001;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010110010001001;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0011000010001001;
		usleep(microseconds);

		///color change
		usleep(1000000);

		*(baseaddr_p + 0) = 0b0010100001000011;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010110001000011;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0011000001000011;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010100001010011;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010100001100011;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010110001100011;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010100001110011;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010100010000011;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0010110010000011;
		usleep(microseconds);

		*(baseaddr_p + 0) = 0b0011000010000011;
		usleep(microseconds);
	} while (1==1);

    cleanup_platform();
    return 0;
}
